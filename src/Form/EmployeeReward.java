/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Database.DBConnection;
import Database.EmployeeRewardClass;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author ASUS
 */
public class EmployeeReward extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	List<String> manvList = new ArrayList<String>();
    List<EmployeeRewardClass> employeeList = new ArrayList<EmployeeRewardClass>();
    /**
     * Creates new form EmployeeReward
     */
  //Lưu index row đang được chọn:
    int selectedIndex = -1;
    
    //Dùng để thao tác trên bảng:
    DefaultTableModel tableModel;
    
    //Lưu chức năng hiện đang sử dụng để sử dụng nút lưu và hủy:
    String funcName = "";
    
    public EmployeeReward() {
        initComponents();
        tableModel = (DefaultTableModel) tableEmployeeRewardMana.getModel();
        showEmployee();
        
        loadComboboxMaNV();
        
        resetform();
    }

    private void resetform() {
		// TODO Auto-generated method stub
		cbEmployeeCode.setSelectedIndex(0);
		btnSave.setEnabled(false);
        btnCancel.setEnabled(false);    
        
        btnDelete.setEnabled(true);
        btnEdit.setEnabled(true);
        btnAdd.setEnabled(true);
        
        txtDayReward.setDate(null);
        txtFormality.setText("");
        txtReason.setText("");
        txtRewardName.setText("");
        txtNote.setText("");
	}

	private void showEmployee() {
		// TODO Auto-generated method stub
		Connection con = null;
        Statement stmt = null;
        this.employeeList.clear();
        try {
        	con = DBConnection.getInstance().getConnection();
            String query = "SELECT MaKT, NhanVien.MaNV, HoTen, NgayKL, DMKThuongKyLuat.MaKL, Loai, Ten, HinhThuc, LyDo, GhiChu\n" + 
            		"  FROM dbo.NhanVien \n" + 
            		"  LEFT JOIN dbo.KhenThuongKyLuat ON NhanVien.MaNV = KhenThuongKyLuat.MaNV \n" + 
            		"  LEFT JOIN dbo.DMKThuongKyLuat ON dbo.DMKThuongKyLuat.MaDMK = dbo.KhenThuongKyLuat.MaDMK";
     
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()) {
            	EmployeeRewardClass e = 
            			new EmployeeRewardClass(
            				rs.getInt(1),
            				rs.getString(2),
            				rs.getString(3),
            				rs.getString(4),
            				rs.getString(5),
            				rs.getString(6),
            				rs.getString(7),
            				rs.getString(8),
            				rs.getString(9),
            				rs.getString(10));
            	this.employeeList.add(e);
           }
        //Đưa các bộ đếm hàng về 0:
        tableModel.setRowCount(0);
        for(EmployeeRewardClass employee: employeeList){
            if(employee.getMaKT() != 0) {
            	tableModel.addRow(new Object[] {
                        tableModel.getRowCount()+1,
                        employee.getMaNV(),
                        employee.getLoai(),
                        employee.getNgayKL(),
                        employee.getTen(),
                        employee.getLyDo(),
                        employee.getHinhThuc(),
                        employee.getGhiChu()
                    });
            }
        }}
        catch (Exception e) {
			// TODO: handle exception
        	e.printStackTrace();
		}
	}

	private void loadComboboxMaNV() {
		// TODO Auto-generated method stub
    	Connection con = null;
        Statement stmt = null;
        try {
        	con = DBConnection.getInstance().getConnection();
            String query = "SELECT MaNV\n" + 
            		"FROM dbo.NhanVien";
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()) {
            	this.manvList.add(rs.getString(1));
           }
            for(String string : manvList) {
            	cbEmployeeCode.addItem(string.trim());
            	//Set giá trị mặc định ban đầu là index 0:
            cbEmployeeCode.setSelectedIndex(0);
        }}
        catch (Exception e) {
			// TODO: handle exception
		}
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        txtEmployeeName.setEditable(false);
        txtDayReward = new com.toedter.calendar.JDateChooser();
        txtRewardName = new javax.swing.JTextField();
        txtReason = new javax.swing.JTextField();
        txtFormality = new javax.swing.JTextField();
        g = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        cbEmployeeCode = new javax.swing.JComboBox<>();
        cbEmployeeCode.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		for(EmployeeRewardClass e1:employeeList) {
        			if(e1.getMaNV().trim().equals(
        					cbEmployeeCode.getSelectedItem().toString().trim())){
        				txtEmployeeName.setText(e1.getHoTen());
        				if(e1.getMaKT() != 0) {
        					try {
								txtDayReward.setDate(
										new SimpleDateFormat("yyyy-MM-dd").parse(e1.getNgayKL()));
							} catch (ParseException e2) {
								// TODO Auto-generated catch block
								e2.printStackTrace();
							}
        					txtFormality.setText(e1.getHinhThuc());
        					txtNote.setText(e1.getGhiChu());
        					txtReason.setText(e1.getLyDo());
        					txtRewardName.setText(e1.getTen());
        					setcbLoai(e1.getLoai());
        				}
        				else {
        					txtDayReward.setDate(null);
        			        txtFormality.setText("");
        			        txtReason.setText("");
        			        txtRewardName.setText("");
        			        txtNote.setText("");
        				}
        				break;
        			}
        		}
        	}
        });
        jPanel4 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEmployeeRewardMana = new javax.swing.JTable();
        tableEmployeeRewardMana.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mousePressed(MouseEvent e) {
        		selectedIndex = tableEmployeeRewardMana.getSelectedRow();
        		if(selectedIndex >= 0 && selectedIndex < employeeList.size() && !funcName.equals("add")) {
        			EmployeeRewardClass e1 = employeeList.get(selectedIndex);
        			txtNote.setText(e1.getGhiChu());
        			txtFormality.setText(e1.getHinhThuc());
        			txtReason.setText(e1.getLyDo());
        			txtRewardName.setText(e1.getTen());
        			if(e1.getNgayKL() == null) {
        				txtDayReward.setDate(null);
        			}else {
        				try {
                            //Chuỗi ban đầu: yyyy-MM-dd:
                            String bdStr = e1.getNgayKL();

                            Date bdDate = new SimpleDateFormat("yyyy-MM-dd").parse(bdStr);
                            
                            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                            String tmp = df.format(bdDate);
                            
                            Date result = new SimpleDateFormat("dd/MM/yyyy").parse(tmp);

                            txtDayReward.setDate(result);
                            
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
        			}
        			setcbLoai(e1.getLoai());
        			setcbMaNV(e1.getMaNV());
        		}
        	}
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Mã NV:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Tên NV:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Ngày KL:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Tên KL:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel5.setText("Lí do:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("Lọai:");

        txtType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Khen thưởng", "Kỉ luật" }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Hình thức:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setText("Ghi chú:");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        g.setViewportView(txtNote);

        cbEmployeeCode.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEmployeeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(53, 53, 53)
                        .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRewardName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(32, 32, 32)
                            .addComponent(txtDayReward, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormality, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(cbEmployeeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFormality, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(txtDayReward, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRewardName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18))); // NOI18N

        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit-icon.png"))); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/xoa.png"))); // NOI18N
        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete-icon.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setMaximumSize(new java.awt.Dimension(87, 29));
        btnDelete.setMinimumSize(new java.awt.Dimension(87, 29));
        btnDelete.setPreferredSize(new java.awt.Dimension(87, 29));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/luu.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Refresh-icon.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.setPreferredSize(new java.awt.Dimension(100, 29));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addGap(29, 29, 29)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 204));
        jLabel9.setText("KHEN THƯỞNG/KỈ LUẬT NHÂN VIÊN");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 18))); // NOI18N

        tableEmployeeRewardMana.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã NV", "Loại", "Ngày", "Tên KL", "Lí do", "Hình thức", "Ghi chú"
            }
        ));
        jScrollPane2.setViewportView(tableEmployeeRewardMana);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void setcbMaNV(String maNV) {
		// TODO Auto-generated method stub
		for(int i = 0; i < manvList.size(); ++i) {
			if(manvList.get(i).equals(maNV)) {
				cbEmployeeCode.setSelectedIndex(i);
				break;
			}
		}
	}

	protected void setcbLoai(String loai) {
		// TODO Auto-generated method stub
		if("Kỉ luật".equals(loai)) {
			txtType.setSelectedIndex(1);
		}
		else {
			txtType.setSelectedIndex(0);
		}
	}

	private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
		//Báo hiệu là đang thao tác chức năng add:
        this.funcName = "add";

        //Kiểm tra xem liệu họ có đang thêm dữ liệu không?
        if(txtFormality.isEditable() 
        		&& txtNote.isEditable() && txtReason.isEditable())
        {
            //Kiểm tra họ có muốn hủy bỏ các trường đã nhập để thêm một employee mới không?
            //Kiểm tra người dùng đã nhập đc thông tin gì rồi?
            //Nếu chưa nhập thông tin gì thì bấm thoải mái.
            if(!txtEmployeeName.getText().equals("") || !(cbEmployeeCode.getSelectedIndex()==0)
                || !(txtType.getSelectedIndex()== 0) || !txtFormality.getText().equals("")
                || !txtReason.getText().equals("") || !txtNote.getText().equals(""))
            {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog (null, "Bạn có muốn thêm mới và hủy các thông tin hiện có?","Warning",dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    // Reset thêm mới:
                    resetform();
                    btnDelete.setEnabled(false);
                    btnEdit.setEnabled(false);
                    btnAdd.setEnabled(false);
                    btnSave.setEnabled(true);
                    btnCancel.setEnabled(true);
                }
            }
        }else{
            //Reset phòng trường hợp nếu như người dùng đã click vào một nhân viên bất kỳ:
            resetform();           
            btnAdd.setEnabled(false);
            btnDelete.setEnabled(false);
            btnEdit.setEnabled(false);

            btnSave.setEnabled(true);
            btnCancel.setEnabled(true);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
    	if(selectedIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Hãy chọn một nhân viên để chỉnh sửa!");
            resetform();
        }else{
            //Thiết lập các chức năng chuẩn bị chỉnh sửa nhân viên:
            this.funcName = "edit";
            //Không cho người dùng thay đổi mã nhân viên:
            txtDayReward.setEnabled(true);
            txtFormality.setEditable(true);
            txtNote.setEditable(true);
            txtReason.setEditable(true);
            txtRewardName.setEditable(true);

            btnAdd.setEnabled(false);
            btnDelete.setEnabled(false);

            btnSave.setEnabled(true);
            btnCancel.setEnabled(true);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    	btnAdd.setEnabled(true);
    	btnCancel.setEnabled(false);
    	btnDelete.setEnabled(true);
    	btnEdit.setEnabled(true);
    	btnSave.setEnabled(false);
    	resetform();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    	if(selectedIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Hãy chọn một nhân viên để xóa!");
            resetform();
        }
        else{
            //Thiết lập các chức năng để chuẩn bị xóa:
            this.funcName = "delete";
            btnAdd.setEnabled(false);
            btnEdit.setEnabled(false);

            btnSave.setEnabled(true);
            btnCancel.setEnabled(true);

        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    private int getDMKValue(String loai, String ten, String hinhthuc) {
    	int res = 0;
    	
    	Connection con = null;
    	PreparedStatement preparedStatement = null;
    	try {
        	con = DBConnection.getInstance().getConnection();
        	String query = "SELECT MaDMK " + 
        			"  FROM [dbo].[DMKThuongKyLuat] \n" + 
        			"  WHERE Loai = ? AND Ten = ? AND HinhThuc = ? ";
        	preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, loai);
            preparedStatement.setString(2, ten);
            preparedStatement.setString(3, hinhthuc);
            ResultSet resultSet = preparedStatement.executeQuery();
            if(!resultSet.next()) {
            	query = "INSERT INTO [dbo].[DMKThuongKyLuat]\n" + 
                		"           (\n" + 
                		"           [Loai]\n" + 
                		"           ,[Ten]\n" + 
                		"           ,[HinhThuc])\n" + 
                		"     VALUES\n" + 
                		"           (?, ?, ?)";
                preparedStatement = con.prepareStatement(query);
                preparedStatement.setString(1, loai);
                preparedStatement.setString(2, ten);
                preparedStatement.setString(3, hinhthuc);
                preparedStatement.executeUpdate();
                query = "SELECT top 1 [MaDMK] FROM [dbo].[DMKThuongKyLuat] ORDER BY [MaDMK] DESC";
                preparedStatement = con.prepareStatement(query);
                resultSet = preparedStatement.executeQuery();
                resultSet.next();
                return resultSet.getInt(1);
            }
            else {
            	return resultSet.getInt(1);
            }
        }
    	catch (Exception e) {
			// TODO: handle exception
    		e.printStackTrace();
		}
		return res;
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    	String manv = cbEmployeeCode.getSelectedItem().toString();
    	Date ngay = txtDayReward.getDate() == null ? new Date() : txtDayReward.getDate(); 
    	String loai = txtType.getSelectedItem().toString();
    	String ten = txtRewardName.getText().toString();
    	String lydo = txtReason.getText().toString();
    	String ghichu = txtNote.getText().toString();
    	String hinhthuc = txtFormality.getText().toString();
    	int dialogButton, dialogResult;
		switch (funcName) {
		case "delete": 
			dialogButton = JOptionPane.YES_NO_OPTION;
            dialogResult = JOptionPane.showConfirmDialog (null, "Bạn có muốn xoá khen thưởng/kỉ luật này?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                //Delete employee:
            	Connection con = null;
            	PreparedStatement stmt = null;
                try {
                	con = DBConnection.getInstance().getConnection();
                    String query = "DELETE FROM [dbo].[KhenThuongKyLuat]\n" + 
                    		"      WHERE MaKT = ?";
                    stmt = con.prepareStatement(query);
                    stmt.setInt(1, this.employeeList.get(selectedIndex).getMaKT());
                    stmt.executeUpdate();
                }
                catch (Exception e) {
					// TODO: handle exception
				}
                //Show lại dữ liệu mới:
                showEmployee();

                //Reset form về ban đầu:
                resetform();
            }
			break;
		case "add":
			dialogButton = JOptionPane.YES_NO_OPTION;
            dialogResult = JOptionPane.showConfirmDialog (null, "Bạn có muốn cập nhật thay đổi này?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                //Delete employee:
            	Connection con = null;
            	PreparedStatement preparedStatement = null;
            	try {
                	con = DBConnection.getInstance().getConnection();
                    int id = getDMKValue(loai, ten, hinhthuc); 
                    String query = "INSERT INTO [dbo].[KhenThuongKyLuat]\n" + 
                    		"           ([MaNV]\n" + 
                    		"           ,[NgayKL]\n" + 
                    		"           ,[MaDMK]\n" + 
                    		"           ,[LyDo]\n" + 
                    		"           ,[GhiChu])\n" + 
                    		"     VALUES\n" + 
                    		"           (?, ?, ?, ?, ?)";
                    preparedStatement = con.prepareStatement(query);
                    preparedStatement.setString(1, manv);
                    preparedStatement.setDate(2, new java.sql.Date(ngay.getTime()));
                    preparedStatement.setInt(3, id);
                    preparedStatement.setString(4, lydo);
                    preparedStatement.setString(5, ghichu);
                    preparedStatement.executeUpdate();
                }
                catch (Exception e) {
					// TODO: handle exception
                	e.printStackTrace();
				}
                //Show lại dữ liệu mới:
                showEmployee();

                //Reset form về ban đầu:
                resetform();
            }
            break;
		case "edit":
			EmployeeRewardClass e1 = employeeList.get(selectedIndex);
			dialogButton = JOptionPane.YES_NO_OPTION;
            dialogResult = JOptionPane.showConfirmDialog (null, "Bạn có muốn cập nhật thay đổi này?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                //Delete employee:
            	Connection con = null;
            	PreparedStatement preparedStatement = null;
            	try {
                	con = DBConnection.getInstance().getConnection();
                    int id = getDMKValue(loai, ten, hinhthuc); 
                    String query = "UPDATE [dbo].[KhenThuongKyLuat]\n" + 
                    		"   SET \n" + 
                    		"      [NgayKL] = ?\n" + 
                    		"      ,[MaDMK] = ?\n" + 
                    		"      ,[LyDo] = ?\n" + 
                    		"      ,[GhiChu] = ?\n" + 
                    		" WHERE MaKT = ?";
                    preparedStatement = con.prepareStatement(query);
                    preparedStatement.setDate(1, new java.sql.Date(ngay.getTime()));
                    preparedStatement.setInt(2, id);
                    preparedStatement.setString(3, lydo);
                    preparedStatement.setString(4, ghichu);
                    preparedStatement.setInt(5, e1.getMaKT());
                    preparedStatement.executeUpdate();
                }
                catch (Exception e) {
					// TODO: handle exception
                	e.printStackTrace();
				}
                //Show lại dữ liệu mới:
                showEmployee();

                //Reset form về ban đầu:
                resetform();
            }
			break;
		}
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
    	resetform();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeReward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeReward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeReward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeReward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeReward().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbEmployeeCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtNote;
    private javax.swing.JTable tableEmployeeRewardMana;
    private com.toedter.calendar.JDateChooser txtDayReward;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtFormality;
    private javax.swing.JScrollPane g;
    private javax.swing.JTextField txtReason;
    private javax.swing.JTextField txtRewardName;
    private javax.swing.JComboBox<String> txtType;
    // End of variables declaration//GEN-END:variables
}
